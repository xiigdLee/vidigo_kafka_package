
##############################################################################################
##                                                                                          ##
##                                       Default Config                                     ##
##                                                                                          ##
##############################################################################################
broker.id=1
port=9092

# socket 관련 설정
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=10457600


# io 스레드가 처리하는 동안 지연된 메세지를 보관하는 큐의 크기. 큐가 가득차면, 네트워크 스레드는 더이상 메세지를 받지 않는다.
queued.max.requests=100

# zookeeper 연결 주소
zookeeper.connect=192.168.1.245:2181

##############################################################################################
##                                                                                          ##
##                                     Transaction Config                                   ##
##                                                                                          ##
##############################################################################################

acks=all

transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1

# 트랜잭션에 최대로 허용할 타임아웃
transaction.max.timeout.ms=600000

# 트랜잭션 코디네이터가 현재 트랜잭션의 트랜잭션 상태 업데이트를 기다릴 시간, 이 시간이 지날 때까지 업데이트를 하지 않으면 트랜잭션 id는 만료
# 토픽의 보존 설정으로 인해 프로듀셔 id로 쓴 마지막 메세지가 삭제되면 프로듀서 id가 더 빨리 만료 될 수 있다. 일단 14일
transactional.id.expiration.ms=1209600000




##############################################################################################
##                                                                                          ##
##                                         Log Config                                       ##
##                                                                                          ##
##############################################################################################

# 로그 저장 디렉토리
log.dir=/opt/kafka/logs

# 로그 보존 정책에 따른 로그 세그먼트 파일 삭제를 브로커가 확인하는 주기
log.retention.check.interval.ms=1800000
log.retention.hours=72

# 세그먼트 파일의 최대 크기, 1.5GB
log.segment.bytes=1610612736
log.cleaner.enable=false


# 새로운 세그먼트 파일이 생성된 이후 크기 한도에 도달하지 않았더라도 다음 파일로 넘어갈 주기를 정의
log.roll.hours=72


##############################################################################################
##                                                                                          ##
##                                        SASL Config                                       ##
##                                                                                          ##
##############################################################################################
# Kafka Server의 Super 유저 이름.
super.users=User:vadmin
 
# SASL 인증 방식을 처리하기 위한 설정.
security.inter.broker.protocol=SASL_PLAINTEXT

#브로커간 통신에 사용할 SASL 메커니즘, 기본값은 GSSAPI
sasl.mechanism.inter.broker.protocol=PLAIN

#Kafka 서버에서 활성화 된 SASL 메커니즘의 리스트
sasl.enabled.mechanisms=PLAIN

# ACL을 저장하는 즉시 사용 가능한 Authorizer 구현 제공
authorizer.class.name=kafka.security.auth.SimpleAclAuthorizer

# Super User를 제외한 User도 해당 리소스에 액세스를 제어 가능
allow.everyone.if.no.acl.found=true


##############################################################################################
##                                                                                          ##
##                                      Topic Config                                        ##
##                                                                                          ##
##############################################################################################

# 기본 파티션 갯수 보통 물리적 프로세서의 절반 갯수를 지정하는 것을 권장
num.partitions=3

# 컨슈머의 fetch.message.max.bytes와 값을 맞춤
# producer(batch size) <-> broker(message max bytes) <-> consumer(fetch max bytes)
message.max.bytes=205800

# 로그 디렉토리 기준으로 복구할 떄 사용되는 스레드 개수 지정, ibm 기준 1로 되어 있지만 5로 설정 해보고 추후 변경
num.recovery.threads.per.data.dir=5

# 자동으로 토픽 만들기 금지
auto.create.topics.enable=false

# 기본 복제계수, 2
default.replication.factor=2


##############################################################################################
##                                                                                          ##
##                                     Network Config                                       ##
##                                                                                          ##
##############################################################################################

# 서버에서 네트워크로부터 요청을 받고 네트워크로 응답을 전송할 떄 사용할 스레드 수
num.network.threads=3
num.io.threads=8

# Kafka 주소 설정 매핑
listener.security.protocol.map=SASL_EXTERNAL:SASL_PLAINTEXT,SASL_INTERNAL:SASL_PLAINTEXT,EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT

# Broker가 사용하는 호스트와 포트를 지정
listeners=INTERNAL://kafka_cluster_broker0_1:9092
 
# Producer와 Consumer가 접근할 호스트와 포트를 지정
advertised.listeners=SASL_EXTERNAL://192.168.1.245:9092


##############################################################################################
##                                                                                          ##
##                                        ISR Config                                        ##
##                                                                                          ##
##############################################################################################

# 최소 isr 계수
min.insync.replicas=2

# 팔로워 파티션이 해당 값 보다 더 긴 시간동안 데이터를 가져가지 않는다면 해당 팔로워 파티션을 ISR에서 제외
replica.lag.time.max.ms = 3000

# 부정한 리더 선출, 토픽 별로 설정 가능하다. false 시 OSR은 ISR의 리더로 선출되지 못하고 데이터의 유실을 최소화 할 수 있다.
unclean.leader.election.enable=false


